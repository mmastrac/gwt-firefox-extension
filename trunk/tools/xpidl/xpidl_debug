

Unused terminals:


Grammar

Rule 1     idlfile -> productions
Rule 2     productions -> <empty>
Rule 3     productions -> CDATA productions
Rule 4     productions -> INCLUDE productions
Rule 5     productions -> interface productions
Rule 6     productions -> typedef productions
Rule 7     productions -> native productions
Rule 8     typedef -> TYPEDEF IDENTIFIER IDENTIFIER ;
Rule 9     native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
Rule 10    afternativeid -> <empty>
Rule 11    anyident -> IDENTIFIER
Rule 12    anyident -> CONST
Rule 13    attributes -> [ attlist ]
Rule 14    attributes -> <empty>
Rule 15    attlist -> attribute
Rule 16    attlist -> attribute , attlist
Rule 17    attribute -> anyident attributeval
Rule 18    attributeval -> ( IDENTIFIER )
Rule 19    attributeval -> ( IID )
Rule 20    attributeval -> <empty>
Rule 21    interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
Rule 22    ifacebody -> { members }
Rule 23    ifacebody -> <empty>
Rule 24    ifacebase -> : IDENTIFIER
Rule 25    ifacebase -> <empty>
Rule 26    members -> <empty>
Rule 27    members -> member members
Rule 28    member -> CDATA
Rule 29    member -> CONST IDENTIFIER IDENTIFIER = number ;
Rule 30    number -> NUMBER
Rule 31    number -> HEXNUM
Rule 32    number -> IDENTIFIER
Rule 33    number -> ( number )
Rule 34    number -> - number
Rule 35    number -> number + number
Rule 36    number -> number - number
Rule 37    number -> number * number
Rule 38    number -> number LSHIFT number
Rule 39    number -> number RSHIFT number
Rule 40    number -> number | number
Rule 41    member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ;
Rule 42    member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ;
Rule 43    paramlist -> param moreparams
Rule 44    paramlist -> <empty>
Rule 45    moreparams -> <empty>
Rule 46    moreparams -> , param moreparams
Rule 47    param -> attributes paramtype IDENTIFIER IDENTIFIER
Rule 48    paramtype -> IN
Rule 49    paramtype -> INOUT
Rule 50    paramtype -> OUT
Rule 51    optreadonly -> READONLY
Rule 52    optreadonly -> <empty>
Rule 53    raises -> RAISES ( idlist )
Rule 54    raises -> <empty>
Rule 55    idlist -> IDENTIFIER
Rule 56    idlist -> IDENTIFIER , idlist

Terminals, with rules where they appear

(                    : 9 18 19 33 42 53
)                    : 9 18 19 33 42 53
*                    : 37
+                    : 35
,                    : 16 46 56
-                    : 34 36
:                    : 24
;                    : 8 9 21 29 41 42
=                    : 29
ATTRIBUTE            : 41
CDATA                : 3 28
CONST                : 12 29
HEXNUM               : 31
IDENTIFIER           : 8 8 9 11 18 21 24 29 29 32 41 41 42 42 47 47 55 56
IID                  : 19
IN                   : 48
INCLUDE              : 4
INOUT                : 49
INTERFACE            : 21
LSHIFT               : 38
NATIVE               : 9
NATIVEID             : 9
NUMBER               : 30
OUT                  : 50
RAISES               : 53
READONLY             : 51
RSHIFT               : 39
TYPEDEF              : 8
[                    : 13
]                    : 13
error                : 
{                    : 22
|                    : 40
}                    : 22

Nonterminals, with rules where they appear

afternativeid        : 9
anyident             : 17
attlist              : 13 16
attribute            : 15 16
attributes           : 9 21 41 42 47
attributeval         : 17
idlfile              : 0
idlist               : 53 56
ifacebase            : 21
ifacebody            : 21
interface            : 5
member               : 27
members              : 22 27
moreparams           : 43 46
native               : 7
number               : 29 33 34 35 35 36 36 37 37 38 38 39 39 40 40
optreadonly          : 41
param                : 43 46
paramlist            : 42
paramtype            : 47
productions          : 1 3 4 5 6 7
raises               : 42
typedef              : 6


Parsing method: LALR


state 0

    (0) S' -> . idlfile
    (1) idlfile -> . productions
    (2) productions -> .
    (3) productions -> . CDATA productions
    (4) productions -> . INCLUDE productions
    (5) productions -> . interface productions
    (6) productions -> . typedef productions
    (7) productions -> . native productions
    (21) interface -> . attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
    (8) typedef -> . TYPEDEF IDENTIFIER IDENTIFIER ;
    (9) native -> . attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    $end            reduce using rule 2 (productions -> .)
    CDATA           shift and go to state 9
    INCLUDE         shift and go to state 7
    TYPEDEF         shift and go to state 3
    [               shift and go to state 6
    INTERFACE       reduce using rule 14 (attributes -> .)
    NATIVE          reduce using rule 14 (attributes -> .)


    typedef                        shift and go to state 2
    idlfile                        shift and go to state 4
    productions                    shift and go to state 1
    interface                      shift and go to state 5
    attributes                     shift and go to state 10
    native                         shift and go to state 8

state 1

    (1) idlfile -> productions .

    $end            reduce using rule 1 (idlfile -> productions .)



state 2

    (6) productions -> typedef . productions
    (2) productions -> .
    (3) productions -> . CDATA productions
    (4) productions -> . INCLUDE productions
    (5) productions -> . interface productions
    (6) productions -> . typedef productions
    (7) productions -> . native productions
    (21) interface -> . attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
    (8) typedef -> . TYPEDEF IDENTIFIER IDENTIFIER ;
    (9) native -> . attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    $end            reduce using rule 2 (productions -> .)
    CDATA           shift and go to state 9
    INCLUDE         shift and go to state 7
    TYPEDEF         shift and go to state 3
    [               shift and go to state 6
    INTERFACE       reduce using rule 14 (attributes -> .)
    NATIVE          reduce using rule 14 (attributes -> .)


    typedef                        shift and go to state 2
    productions                    shift and go to state 11
    interface                      shift and go to state 5
    attributes                     shift and go to state 10
    native                         shift and go to state 8

state 3

    (8) typedef -> TYPEDEF . IDENTIFIER IDENTIFIER ;

    IDENTIFIER      shift and go to state 12



state 4

    (0) S' -> idlfile .




state 5

    (5) productions -> interface . productions
    (2) productions -> .
    (3) productions -> . CDATA productions
    (4) productions -> . INCLUDE productions
    (5) productions -> . interface productions
    (6) productions -> . typedef productions
    (7) productions -> . native productions
    (21) interface -> . attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
    (8) typedef -> . TYPEDEF IDENTIFIER IDENTIFIER ;
    (9) native -> . attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    $end            reduce using rule 2 (productions -> .)
    CDATA           shift and go to state 9
    INCLUDE         shift and go to state 7
    TYPEDEF         shift and go to state 3
    [               shift and go to state 6
    INTERFACE       reduce using rule 14 (attributes -> .)
    NATIVE          reduce using rule 14 (attributes -> .)


    typedef                        shift and go to state 2
    productions                    shift and go to state 13
    interface                      shift and go to state 5
    attributes                     shift and go to state 10
    native                         shift and go to state 8

state 6

    (13) attributes -> [ . attlist ]
    (15) attlist -> . attribute
    (16) attlist -> . attribute , attlist
    (17) attribute -> . anyident attributeval
    (11) anyident -> . IDENTIFIER
    (12) anyident -> . CONST

    IDENTIFIER      shift and go to state 17
    CONST           shift and go to state 14


    attribute                      shift and go to state 15
    anyident                       shift and go to state 16
    attlist                        shift and go to state 18

state 7

    (4) productions -> INCLUDE . productions
    (2) productions -> .
    (3) productions -> . CDATA productions
    (4) productions -> . INCLUDE productions
    (5) productions -> . interface productions
    (6) productions -> . typedef productions
    (7) productions -> . native productions
    (21) interface -> . attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
    (8) typedef -> . TYPEDEF IDENTIFIER IDENTIFIER ;
    (9) native -> . attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    $end            reduce using rule 2 (productions -> .)
    CDATA           shift and go to state 9
    INCLUDE         shift and go to state 7
    TYPEDEF         shift and go to state 3
    [               shift and go to state 6
    INTERFACE       reduce using rule 14 (attributes -> .)
    NATIVE          reduce using rule 14 (attributes -> .)


    typedef                        shift and go to state 2
    productions                    shift and go to state 19
    interface                      shift and go to state 5
    attributes                     shift and go to state 10
    native                         shift and go to state 8

state 8

    (7) productions -> native . productions
    (2) productions -> .
    (3) productions -> . CDATA productions
    (4) productions -> . INCLUDE productions
    (5) productions -> . interface productions
    (6) productions -> . typedef productions
    (7) productions -> . native productions
    (21) interface -> . attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
    (8) typedef -> . TYPEDEF IDENTIFIER IDENTIFIER ;
    (9) native -> . attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    $end            reduce using rule 2 (productions -> .)
    CDATA           shift and go to state 9
    INCLUDE         shift and go to state 7
    TYPEDEF         shift and go to state 3
    [               shift and go to state 6
    INTERFACE       reduce using rule 14 (attributes -> .)
    NATIVE          reduce using rule 14 (attributes -> .)


    typedef                        shift and go to state 2
    productions                    shift and go to state 20
    interface                      shift and go to state 5
    attributes                     shift and go to state 10
    native                         shift and go to state 8

state 9

    (3) productions -> CDATA . productions
    (2) productions -> .
    (3) productions -> . CDATA productions
    (4) productions -> . INCLUDE productions
    (5) productions -> . interface productions
    (6) productions -> . typedef productions
    (7) productions -> . native productions
    (21) interface -> . attributes INTERFACE IDENTIFIER ifacebase ifacebody ;
    (8) typedef -> . TYPEDEF IDENTIFIER IDENTIFIER ;
    (9) native -> . attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    $end            reduce using rule 2 (productions -> .)
    CDATA           shift and go to state 9
    INCLUDE         shift and go to state 7
    TYPEDEF         shift and go to state 3
    [               shift and go to state 6
    INTERFACE       reduce using rule 14 (attributes -> .)
    NATIVE          reduce using rule 14 (attributes -> .)


    typedef                        shift and go to state 2
    productions                    shift and go to state 21
    interface                      shift and go to state 5
    attributes                     shift and go to state 10
    native                         shift and go to state 8

state 10

    (21) interface -> attributes . INTERFACE IDENTIFIER ifacebase ifacebody ;
    (9) native -> attributes . NATIVE IDENTIFIER afternativeid ( NATIVEID ) ;

    INTERFACE       shift and go to state 22
    NATIVE          shift and go to state 23



state 11

    (6) productions -> typedef productions .

    $end            reduce using rule 6 (productions -> typedef productions .)



state 12

    (8) typedef -> TYPEDEF IDENTIFIER . IDENTIFIER ;

    IDENTIFIER      shift and go to state 24



state 13

    (5) productions -> interface productions .

    $end            reduce using rule 5 (productions -> interface productions .)



state 14

    (12) anyident -> CONST .

    (               reduce using rule 12 (anyident -> CONST .)
    ,               reduce using rule 12 (anyident -> CONST .)
    ]               reduce using rule 12 (anyident -> CONST .)



state 15

    (15) attlist -> attribute .
    (16) attlist -> attribute . , attlist

    ]               reduce using rule 15 (attlist -> attribute .)
    ,               shift and go to state 25



state 16

    (17) attribute -> anyident . attributeval
    (18) attributeval -> . ( IDENTIFIER )
    (19) attributeval -> . ( IID )
    (20) attributeval -> .

    (               shift and go to state 27
    ,               reduce using rule 20 (attributeval -> .)
    ]               reduce using rule 20 (attributeval -> .)


    attributeval                   shift and go to state 26

state 17

    (11) anyident -> IDENTIFIER .

    (               reduce using rule 11 (anyident -> IDENTIFIER .)
    ,               reduce using rule 11 (anyident -> IDENTIFIER .)
    ]               reduce using rule 11 (anyident -> IDENTIFIER .)



state 18

    (13) attributes -> [ attlist . ]

    ]               shift and go to state 28



state 19

    (4) productions -> INCLUDE productions .

    $end            reduce using rule 4 (productions -> INCLUDE productions .)



state 20

    (7) productions -> native productions .

    $end            reduce using rule 7 (productions -> native productions .)



state 21

    (3) productions -> CDATA productions .

    $end            reduce using rule 3 (productions -> CDATA productions .)



state 22

    (21) interface -> attributes INTERFACE . IDENTIFIER ifacebase ifacebody ;

    IDENTIFIER      shift and go to state 29



state 23

    (9) native -> attributes NATIVE . IDENTIFIER afternativeid ( NATIVEID ) ;

    IDENTIFIER      shift and go to state 30



state 24

    (8) typedef -> TYPEDEF IDENTIFIER IDENTIFIER . ;

    ;               shift and go to state 31



state 25

    (16) attlist -> attribute , . attlist
    (15) attlist -> . attribute
    (16) attlist -> . attribute , attlist
    (17) attribute -> . anyident attributeval
    (11) anyident -> . IDENTIFIER
    (12) anyident -> . CONST

    IDENTIFIER      shift and go to state 17
    CONST           shift and go to state 14


    attribute                      shift and go to state 15
    anyident                       shift and go to state 16
    attlist                        shift and go to state 32

state 26

    (17) attribute -> anyident attributeval .

    ,               reduce using rule 17 (attribute -> anyident attributeval .)
    ]               reduce using rule 17 (attribute -> anyident attributeval .)



state 27

    (18) attributeval -> ( . IDENTIFIER )
    (19) attributeval -> ( . IID )

    IDENTIFIER      shift and go to state 33
    IID             shift and go to state 34



state 28

    (13) attributes -> [ attlist ] .

    IN              reduce using rule 13 (attributes -> [ attlist ] .)
    INOUT           reduce using rule 13 (attributes -> [ attlist ] .)
    OUT             reduce using rule 13 (attributes -> [ attlist ] .)
    IDENTIFIER      reduce using rule 13 (attributes -> [ attlist ] .)
    READONLY        reduce using rule 13 (attributes -> [ attlist ] .)
    ATTRIBUTE       reduce using rule 13 (attributes -> [ attlist ] .)
    INTERFACE       reduce using rule 13 (attributes -> [ attlist ] .)
    NATIVE          reduce using rule 13 (attributes -> [ attlist ] .)



state 29

    (21) interface -> attributes INTERFACE IDENTIFIER . ifacebase ifacebody ;
    (24) ifacebase -> . : IDENTIFIER
    (25) ifacebase -> .

    :               shift and go to state 35
    {               reduce using rule 25 (ifacebase -> .)
    ;               reduce using rule 25 (ifacebase -> .)


    ifacebase                      shift and go to state 36

state 30

    (9) native -> attributes NATIVE IDENTIFIER . afternativeid ( NATIVEID ) ;
    (10) afternativeid -> .

    (               reduce using rule 10 (afternativeid -> .)


    afternativeid                  shift and go to state 37

state 31

    (8) typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .

    CDATA           reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)
    INCLUDE         reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)
    TYPEDEF         reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)
    [               reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)
    INTERFACE       reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)
    NATIVE          reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)
    $end            reduce using rule 8 (typedef -> TYPEDEF IDENTIFIER IDENTIFIER ; .)



state 32

    (16) attlist -> attribute , attlist .

    ]               reduce using rule 16 (attlist -> attribute , attlist .)



state 33

    (18) attributeval -> ( IDENTIFIER . )

    )               shift and go to state 38



state 34

    (19) attributeval -> ( IID . )

    )               shift and go to state 39



state 35

    (24) ifacebase -> : . IDENTIFIER

    IDENTIFIER      shift and go to state 40



state 36

    (21) interface -> attributes INTERFACE IDENTIFIER ifacebase . ifacebody ;
    (22) ifacebody -> . { members }
    (23) ifacebody -> .

    {               shift and go to state 42
    ;               reduce using rule 23 (ifacebody -> .)


    ifacebody                      shift and go to state 41

state 37

    (9) native -> attributes NATIVE IDENTIFIER afternativeid . ( NATIVEID ) ;

    (               shift and go to state 43



state 38

    (18) attributeval -> ( IDENTIFIER ) .

    ,               reduce using rule 18 (attributeval -> ( IDENTIFIER ) .)
    ]               reduce using rule 18 (attributeval -> ( IDENTIFIER ) .)



state 39

    (19) attributeval -> ( IID ) .

    ,               reduce using rule 19 (attributeval -> ( IID ) .)
    ]               reduce using rule 19 (attributeval -> ( IID ) .)



state 40

    (24) ifacebase -> : IDENTIFIER .

    {               reduce using rule 24 (ifacebase -> : IDENTIFIER .)
    ;               reduce using rule 24 (ifacebase -> : IDENTIFIER .)



state 41

    (21) interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody . ;

    ;               shift and go to state 44



state 42

    (22) ifacebody -> { . members }
    (26) members -> .
    (27) members -> . member members
    (28) member -> . CDATA
    (29) member -> . CONST IDENTIFIER IDENTIFIER = number ;
    (41) member -> . attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ;
    (42) member -> . attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    }               reduce using rule 26 (members -> .)
    CDATA           shift and go to state 48
    CONST           shift and go to state 45
    [               shift and go to state 6
    IDENTIFIER      reduce using rule 14 (attributes -> .)
    READONLY        reduce using rule 14 (attributes -> .)
    ATTRIBUTE       reduce using rule 14 (attributes -> .)


    members                        shift and go to state 46
    member                         shift and go to state 47
    attributes                     shift and go to state 49

state 43

    (9) native -> attributes NATIVE IDENTIFIER afternativeid ( . NATIVEID ) ;

    NATIVEID        shift and go to state 50



state 44

    (21) interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .

    CDATA           reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)
    INCLUDE         reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)
    TYPEDEF         reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)
    [               reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)
    INTERFACE       reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)
    NATIVE          reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)
    $end            reduce using rule 21 (interface -> attributes INTERFACE IDENTIFIER ifacebase ifacebody ; .)



state 45

    (29) member -> CONST . IDENTIFIER IDENTIFIER = number ;

    IDENTIFIER      shift and go to state 51



state 46

    (22) ifacebody -> { members . }

    }               shift and go to state 52



state 47

    (27) members -> member . members
    (26) members -> .
    (27) members -> . member members
    (28) member -> . CDATA
    (29) member -> . CONST IDENTIFIER IDENTIFIER = number ;
    (41) member -> . attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ;
    (42) member -> . attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ;
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    }               reduce using rule 26 (members -> .)
    CDATA           shift and go to state 48
    CONST           shift and go to state 45
    [               shift and go to state 6
    IDENTIFIER      reduce using rule 14 (attributes -> .)
    READONLY        reduce using rule 14 (attributes -> .)
    ATTRIBUTE       reduce using rule 14 (attributes -> .)


    members                        shift and go to state 53
    member                         shift and go to state 47
    attributes                     shift and go to state 49

state 48

    (28) member -> CDATA .

    CDATA           reduce using rule 28 (member -> CDATA .)
    CONST           reduce using rule 28 (member -> CDATA .)
    [               reduce using rule 28 (member -> CDATA .)
    IDENTIFIER      reduce using rule 28 (member -> CDATA .)
    READONLY        reduce using rule 28 (member -> CDATA .)
    ATTRIBUTE       reduce using rule 28 (member -> CDATA .)
    }               reduce using rule 28 (member -> CDATA .)



state 49

    (41) member -> attributes . optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ;
    (42) member -> attributes . IDENTIFIER IDENTIFIER ( paramlist ) raises ;
    (51) optreadonly -> . READONLY
    (52) optreadonly -> .

    IDENTIFIER      shift and go to state 56
    READONLY        shift and go to state 55
    ATTRIBUTE       reduce using rule 52 (optreadonly -> .)


    optreadonly                    shift and go to state 54

state 50

    (9) native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID . ) ;

    )               shift and go to state 57



state 51

    (29) member -> CONST IDENTIFIER . IDENTIFIER = number ;

    IDENTIFIER      shift and go to state 58



state 52

    (22) ifacebody -> { members } .

    ;               reduce using rule 22 (ifacebody -> { members } .)



state 53

    (27) members -> member members .

    }               reduce using rule 27 (members -> member members .)



state 54

    (41) member -> attributes optreadonly . ATTRIBUTE IDENTIFIER IDENTIFIER ;

    ATTRIBUTE       shift and go to state 59



state 55

    (51) optreadonly -> READONLY .

    ATTRIBUTE       reduce using rule 51 (optreadonly -> READONLY .)



state 56

    (42) member -> attributes IDENTIFIER . IDENTIFIER ( paramlist ) raises ;

    IDENTIFIER      shift and go to state 60



state 57

    (9) native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) . ;

    ;               shift and go to state 61



state 58

    (29) member -> CONST IDENTIFIER IDENTIFIER . = number ;

    =               shift and go to state 62



state 59

    (41) member -> attributes optreadonly ATTRIBUTE . IDENTIFIER IDENTIFIER ;

    IDENTIFIER      shift and go to state 63



state 60

    (42) member -> attributes IDENTIFIER IDENTIFIER . ( paramlist ) raises ;

    (               shift and go to state 64



state 61

    (9) native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .

    CDATA           reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)
    INCLUDE         reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)
    TYPEDEF         reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)
    [               reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)
    INTERFACE       reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)
    NATIVE          reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)
    $end            reduce using rule 9 (native -> attributes NATIVE IDENTIFIER afternativeid ( NATIVEID ) ; .)



state 62

    (29) member -> CONST IDENTIFIER IDENTIFIER = . number ;
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 67

state 63

    (41) member -> attributes optreadonly ATTRIBUTE IDENTIFIER . IDENTIFIER ;

    IDENTIFIER      shift and go to state 71



state 64

    (42) member -> attributes IDENTIFIER IDENTIFIER ( . paramlist ) raises ;
    (43) paramlist -> . param moreparams
    (44) paramlist -> .
    (47) param -> . attributes paramtype IDENTIFIER IDENTIFIER
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    )               reduce using rule 44 (paramlist -> .)
    [               shift and go to state 6
    IN              reduce using rule 14 (attributes -> .)
    INOUT           reduce using rule 14 (attributes -> .)
    OUT             reduce using rule 14 (attributes -> .)


    param                          shift and go to state 72
    paramlist                      shift and go to state 73
    attributes                     shift and go to state 74

state 65

    (33) number -> ( . number )
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 75

state 66

    (34) number -> - . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 76

state 67

    (29) member -> CONST IDENTIFIER IDENTIFIER = number . ;
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    ;               shift and go to state 82
    +               shift and go to state 77
    -               shift and go to state 79
    *               shift and go to state 78
    LSHIFT          shift and go to state 80
    RSHIFT          shift and go to state 81
    |               shift and go to state 83



state 68

    (30) number -> NUMBER .

    )               reduce using rule 30 (number -> NUMBER .)
    +               reduce using rule 30 (number -> NUMBER .)
    -               reduce using rule 30 (number -> NUMBER .)
    *               reduce using rule 30 (number -> NUMBER .)
    LSHIFT          reduce using rule 30 (number -> NUMBER .)
    RSHIFT          reduce using rule 30 (number -> NUMBER .)
    |               reduce using rule 30 (number -> NUMBER .)
    ;               reduce using rule 30 (number -> NUMBER .)



state 69

    (32) number -> IDENTIFIER .

    )               reduce using rule 32 (number -> IDENTIFIER .)
    +               reduce using rule 32 (number -> IDENTIFIER .)
    -               reduce using rule 32 (number -> IDENTIFIER .)
    *               reduce using rule 32 (number -> IDENTIFIER .)
    LSHIFT          reduce using rule 32 (number -> IDENTIFIER .)
    RSHIFT          reduce using rule 32 (number -> IDENTIFIER .)
    |               reduce using rule 32 (number -> IDENTIFIER .)
    ;               reduce using rule 32 (number -> IDENTIFIER .)



state 70

    (31) number -> HEXNUM .

    )               reduce using rule 31 (number -> HEXNUM .)
    +               reduce using rule 31 (number -> HEXNUM .)
    -               reduce using rule 31 (number -> HEXNUM .)
    *               reduce using rule 31 (number -> HEXNUM .)
    LSHIFT          reduce using rule 31 (number -> HEXNUM .)
    RSHIFT          reduce using rule 31 (number -> HEXNUM .)
    |               reduce using rule 31 (number -> HEXNUM .)
    ;               reduce using rule 31 (number -> HEXNUM .)



state 71

    (41) member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER . ;

    ;               shift and go to state 84



state 72

    (43) paramlist -> param . moreparams
    (45) moreparams -> .
    (46) moreparams -> . , param moreparams

    )               reduce using rule 45 (moreparams -> .)
    ,               shift and go to state 85


    moreparams                     shift and go to state 86

state 73

    (42) member -> attributes IDENTIFIER IDENTIFIER ( paramlist . ) raises ;

    )               shift and go to state 87



state 74

    (47) param -> attributes . paramtype IDENTIFIER IDENTIFIER
    (48) paramtype -> . IN
    (49) paramtype -> . INOUT
    (50) paramtype -> . OUT

    IN              shift and go to state 89
    INOUT           shift and go to state 90
    OUT             shift and go to state 91


    paramtype                      shift and go to state 88

state 75

    (33) number -> ( number . )
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               shift and go to state 92
    +               shift and go to state 77
    -               shift and go to state 79
    *               shift and go to state 78
    LSHIFT          shift and go to state 80
    RSHIFT          shift and go to state 81
    |               shift and go to state 83



state 76

    (34) number -> - number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 34 (number -> - number .)
    +               reduce using rule 34 (number -> - number .)
    -               reduce using rule 34 (number -> - number .)
    *               reduce using rule 34 (number -> - number .)
    LSHIFT          reduce using rule 34 (number -> - number .)
    RSHIFT          reduce using rule 34 (number -> - number .)
    |               reduce using rule 34 (number -> - number .)
    ;               reduce using rule 34 (number -> - number .)

  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 79 ]
  ! *               [ shift and go to state 78 ]
  ! LSHIFT          [ shift and go to state 80 ]
  ! RSHIFT          [ shift and go to state 81 ]
  ! |               [ shift and go to state 83 ]


state 77

    (35) number -> number + . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 93

state 78

    (37) number -> number * . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 94

state 79

    (36) number -> number - . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 95

state 80

    (38) number -> number LSHIFT . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 96

state 81

    (39) number -> number RSHIFT . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 97

state 82

    (29) member -> CONST IDENTIFIER IDENTIFIER = number ; .

    CDATA           reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)
    CONST           reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)
    [               reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)
    IDENTIFIER      reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)
    READONLY        reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)
    ATTRIBUTE       reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)
    }               reduce using rule 29 (member -> CONST IDENTIFIER IDENTIFIER = number ; .)



state 83

    (40) number -> number | . number
    (30) number -> . NUMBER
    (31) number -> . HEXNUM
    (32) number -> . IDENTIFIER
    (33) number -> . ( number )
    (34) number -> . - number
    (35) number -> . number + number
    (36) number -> . number - number
    (37) number -> . number * number
    (38) number -> . number LSHIFT number
    (39) number -> . number RSHIFT number
    (40) number -> . number | number

    NUMBER          shift and go to state 68
    HEXNUM          shift and go to state 70
    IDENTIFIER      shift and go to state 69
    (               shift and go to state 65
    -               shift and go to state 66


    number                         shift and go to state 98

state 84

    (41) member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .

    CDATA           reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)
    CONST           reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)
    [               reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)
    IDENTIFIER      reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)
    READONLY        reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)
    ATTRIBUTE       reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)
    }               reduce using rule 41 (member -> attributes optreadonly ATTRIBUTE IDENTIFIER IDENTIFIER ; .)



state 85

    (46) moreparams -> , . param moreparams
    (47) param -> . attributes paramtype IDENTIFIER IDENTIFIER
    (13) attributes -> . [ attlist ]
    (14) attributes -> .

    [               shift and go to state 6
    IN              reduce using rule 14 (attributes -> .)
    INOUT           reduce using rule 14 (attributes -> .)
    OUT             reduce using rule 14 (attributes -> .)


    attributes                     shift and go to state 74
    param                          shift and go to state 99

state 86

    (43) paramlist -> param moreparams .

    )               reduce using rule 43 (paramlist -> param moreparams .)



state 87

    (42) member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) . raises ;
    (53) raises -> . RAISES ( idlist )
    (54) raises -> .

    RAISES          shift and go to state 101
    ;               reduce using rule 54 (raises -> .)


    raises                         shift and go to state 100

state 88

    (47) param -> attributes paramtype . IDENTIFIER IDENTIFIER

    IDENTIFIER      shift and go to state 102



state 89

    (48) paramtype -> IN .

    IDENTIFIER      reduce using rule 48 (paramtype -> IN .)



state 90

    (49) paramtype -> INOUT .

    IDENTIFIER      reduce using rule 49 (paramtype -> INOUT .)



state 91

    (50) paramtype -> OUT .

    IDENTIFIER      reduce using rule 50 (paramtype -> OUT .)



state 92

    (33) number -> ( number ) .

    )               reduce using rule 33 (number -> ( number ) .)
    +               reduce using rule 33 (number -> ( number ) .)
    -               reduce using rule 33 (number -> ( number ) .)
    *               reduce using rule 33 (number -> ( number ) .)
    LSHIFT          reduce using rule 33 (number -> ( number ) .)
    RSHIFT          reduce using rule 33 (number -> ( number ) .)
    |               reduce using rule 33 (number -> ( number ) .)
    ;               reduce using rule 33 (number -> ( number ) .)



state 93

    (35) number -> number + number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 35 (number -> number + number .)
    +               reduce using rule 35 (number -> number + number .)
    -               reduce using rule 35 (number -> number + number .)
    LSHIFT          reduce using rule 35 (number -> number + number .)
    RSHIFT          reduce using rule 35 (number -> number + number .)
    |               reduce using rule 35 (number -> number + number .)
    ;               reduce using rule 35 (number -> number + number .)
    *               shift and go to state 78

  ! *               [ reduce using rule 35 (number -> number + number .) ]
  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 79 ]
  ! LSHIFT          [ shift and go to state 80 ]
  ! RSHIFT          [ shift and go to state 81 ]
  ! |               [ shift and go to state 83 ]


state 94

    (37) number -> number * number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 37 (number -> number * number .)
    +               reduce using rule 37 (number -> number * number .)
    -               reduce using rule 37 (number -> number * number .)
    *               reduce using rule 37 (number -> number * number .)
    LSHIFT          reduce using rule 37 (number -> number * number .)
    RSHIFT          reduce using rule 37 (number -> number * number .)
    |               reduce using rule 37 (number -> number * number .)
    ;               reduce using rule 37 (number -> number * number .)

  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 79 ]
  ! *               [ shift and go to state 78 ]
  ! LSHIFT          [ shift and go to state 80 ]
  ! RSHIFT          [ shift and go to state 81 ]
  ! |               [ shift and go to state 83 ]


state 95

    (36) number -> number - number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 36 (number -> number - number .)
    +               reduce using rule 36 (number -> number - number .)
    -               reduce using rule 36 (number -> number - number .)
    LSHIFT          reduce using rule 36 (number -> number - number .)
    RSHIFT          reduce using rule 36 (number -> number - number .)
    |               reduce using rule 36 (number -> number - number .)
    ;               reduce using rule 36 (number -> number - number .)
    *               shift and go to state 78

  ! *               [ reduce using rule 36 (number -> number - number .) ]
  ! +               [ shift and go to state 77 ]
  ! -               [ shift and go to state 79 ]
  ! LSHIFT          [ shift and go to state 80 ]
  ! RSHIFT          [ shift and go to state 81 ]
  ! |               [ shift and go to state 83 ]


state 96

    (38) number -> number LSHIFT number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 38 (number -> number LSHIFT number .)
    LSHIFT          reduce using rule 38 (number -> number LSHIFT number .)
    RSHIFT          reduce using rule 38 (number -> number LSHIFT number .)
    |               reduce using rule 38 (number -> number LSHIFT number .)
    ;               reduce using rule 38 (number -> number LSHIFT number .)
    +               shift and go to state 77
    -               shift and go to state 79
    *               shift and go to state 78

  ! +               [ reduce using rule 38 (number -> number LSHIFT number .) ]
  ! -               [ reduce using rule 38 (number -> number LSHIFT number .) ]
  ! *               [ reduce using rule 38 (number -> number LSHIFT number .) ]
  ! LSHIFT          [ shift and go to state 80 ]
  ! RSHIFT          [ shift and go to state 81 ]
  ! |               [ shift and go to state 83 ]


state 97

    (39) number -> number RSHIFT number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 39 (number -> number RSHIFT number .)
    LSHIFT          reduce using rule 39 (number -> number RSHIFT number .)
    RSHIFT          reduce using rule 39 (number -> number RSHIFT number .)
    |               reduce using rule 39 (number -> number RSHIFT number .)
    ;               reduce using rule 39 (number -> number RSHIFT number .)
    +               shift and go to state 77
    -               shift and go to state 79
    *               shift and go to state 78

  ! +               [ reduce using rule 39 (number -> number RSHIFT number .) ]
  ! -               [ reduce using rule 39 (number -> number RSHIFT number .) ]
  ! *               [ reduce using rule 39 (number -> number RSHIFT number .) ]
  ! LSHIFT          [ shift and go to state 80 ]
  ! RSHIFT          [ shift and go to state 81 ]
  ! |               [ shift and go to state 83 ]


state 98

    (40) number -> number | number .
    (35) number -> number . + number
    (36) number -> number . - number
    (37) number -> number . * number
    (38) number -> number . LSHIFT number
    (39) number -> number . RSHIFT number
    (40) number -> number . | number

    )               reduce using rule 40 (number -> number | number .)
    |               reduce using rule 40 (number -> number | number .)
    ;               reduce using rule 40 (number -> number | number .)
    +               shift and go to state 77
    -               shift and go to state 79
    *               shift and go to state 78
    LSHIFT          shift and go to state 80
    RSHIFT          shift and go to state 81

  ! +               [ reduce using rule 40 (number -> number | number .) ]
  ! -               [ reduce using rule 40 (number -> number | number .) ]
  ! *               [ reduce using rule 40 (number -> number | number .) ]
  ! LSHIFT          [ reduce using rule 40 (number -> number | number .) ]
  ! RSHIFT          [ reduce using rule 40 (number -> number | number .) ]
  ! |               [ shift and go to state 83 ]


state 99

    (46) moreparams -> , param . moreparams
    (45) moreparams -> .
    (46) moreparams -> . , param moreparams

    )               reduce using rule 45 (moreparams -> .)
    ,               shift and go to state 85


    moreparams                     shift and go to state 103

state 100

    (42) member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises . ;

    ;               shift and go to state 104



state 101

    (53) raises -> RAISES . ( idlist )

    (               shift and go to state 105



state 102

    (47) param -> attributes paramtype IDENTIFIER . IDENTIFIER

    IDENTIFIER      shift and go to state 106



state 103

    (46) moreparams -> , param moreparams .

    )               reduce using rule 46 (moreparams -> , param moreparams .)



state 104

    (42) member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .

    CDATA           reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)
    CONST           reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)
    [               reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)
    IDENTIFIER      reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)
    READONLY        reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)
    ATTRIBUTE       reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)
    }               reduce using rule 42 (member -> attributes IDENTIFIER IDENTIFIER ( paramlist ) raises ; .)



state 105

    (53) raises -> RAISES ( . idlist )
    (55) idlist -> . IDENTIFIER
    (56) idlist -> . IDENTIFIER , idlist

    IDENTIFIER      shift and go to state 108


    idlist                         shift and go to state 107

state 106

    (47) param -> attributes paramtype IDENTIFIER IDENTIFIER .

    ,               reduce using rule 47 (param -> attributes paramtype IDENTIFIER IDENTIFIER .)
    )               reduce using rule 47 (param -> attributes paramtype IDENTIFIER IDENTIFIER .)



state 107

    (53) raises -> RAISES ( idlist . )

    )               shift and go to state 109



state 108

    (55) idlist -> IDENTIFIER .
    (56) idlist -> IDENTIFIER . , idlist

    )               reduce using rule 55 (idlist -> IDENTIFIER .)
    ,               shift and go to state 110



state 109

    (53) raises -> RAISES ( idlist ) .

    ;               reduce using rule 53 (raises -> RAISES ( idlist ) .)



state 110

    (56) idlist -> IDENTIFIER , . idlist
    (55) idlist -> . IDENTIFIER
    (56) idlist -> . IDENTIFIER , idlist

    IDENTIFIER      shift and go to state 108


    idlist                         shift and go to state 111

state 111

    (56) idlist -> IDENTIFIER , idlist .

    )               reduce using rule 56 (idlist -> IDENTIFIER , idlist .)


